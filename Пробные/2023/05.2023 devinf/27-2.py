#  Рассматриваются все пары элементов последовательности, находящихся на расстоянии не меньше чем k
#  (разница в индексах элементов пары должна быть k или более, порядок элементов в паре неважен),
#  разность которых нечётна и, по крайней мере, один из элементов делится на p = 26.
#  Среди всех таких пар нужно найти максимальную сумму элементов.

# Идея: разность нечетна, если один элемент четный, другой нечетный.
# Максимальная сумма может быть образована:
# Для кратных 26 только с нечетными
# Для четных - никак
# Для нечетных - с кратным 26

f = open('27_B.txt')
k = int(f.readline())
n = int(f.readline())
a = [int(i) for i in f]
mx = 0
m26, m_odd = 0, 0
# Храним три значения: максимальное нечетное
# и максимальное кратное 26
for i in range(k, n):
    if a[i] % 26 == 0:  # Кратно 26 - проверяем сумму с максимальным нечетным
        mx = max(mx, a[i] + m_odd)
    elif a[i] % 2 != 0:  # Нечетно - проверяем сумма с максимальным кратным 26
        mx = max(mx, a[i] + m26)
    # Обновляем максимумы
    if a[i - k] % 26 == 0:
        m26 = max(m26, a[i - k])
    elif a[i - k] % 2 != 0:
        m_odd = max(m_odd, a[i - k])
print(mx)
# 7142269
